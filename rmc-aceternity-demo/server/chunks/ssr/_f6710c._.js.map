{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/code/next/rmc-aceternity-demo/app/blog/%5Bslug%5D/page.tsx"],"sourcesContent":["import { IBlog } from \"@/types/blog\"\r\n\r\n// Return a list of `params` to populate the [slug] dynamic segment\r\n\r\n// Multiple versions of this page will be statically generated\r\n// using the `params` returned by `generateStaticParams`\r\nexport default async function Page({\r\n  params,\r\n}: {\r\n  params: Promise<{ slug: string }>\r\n}) {\r\n  const { slug } = await params\r\n  return (\r\n    <>\r\n    {slug}</>\r\n  )\r\n}\r\nexport async function generateStaticParams() {\r\n  const blogs = await fetch('http://spaces.kbdev.kooboo.cn/api/blog/').then((res) => res.json())\r\n \r\n  return blogs.map((blog:IBlog) => ({\r\n    slug: blog._id,\r\n  }))\r\n}\r\n "],"names":[],"mappings":";;;;;;AAMe,eAAe,KAAK,EACjC,MAAM,EAGP;IACC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;IACvB,qBACE;kBACC;;AAEL;AACO,eAAe;IACpB,MAAM,QAAQ,MAAM,MAAM,2CAA2C,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;IAE3F,OAAO,MAAM,GAAG,CAAC,CAAC,OAAe,CAAC;YAChC,MAAM,KAAK,GAAG;QAChB,CAAC;AACH"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file://E%3A/code/next/rmc-aceternity-demo/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ;oBAAAA,CAAUa,QAAQ;gCACxBC,IAAAA;4BAAAA,CAAM;4BAAA;iCACNC,UAAU;sCACV,IAAA,CAAA;gCAAA,QAAA;oCAAA,IAAA,iBAA2C;oCAAA;iCAAA;;+BAC3CC,YAAY;;yBACZC,UAAU;8BACVC,IAAAA,CAAAA;oBAAAA,CAAU;iBAAA,CAAE;;aACd;kBACAC,QAAAA,CAAU,CAAA;YAAA;SAAA;;SACRC,YAAYnB;UACd,QAAA;YAAA,MAAA;gBACA,OAAA,QAAA;wBAAA","ignoreList":[0]}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}